import { Component, OnInit } from '@angular/core';
import { environment } from '../../../environments/environment';
import * as mapboxgl from 'mapbox-gl';
import { HttpClient } from '@angular/common/http';

@Component({
  selector: 'app-map',
  templateUrl: './map.component.html',
  styleUrls: ['./map.component.scss'],
})
export class MapComponent implements OnInit {
  map: mapboxgl.Map;
  style = 'mapbox://styles/mapbox/dark-v10';
  styles = [
    'mapbox://styles/mapbox/light-v10',
    'mapbox://styles/mapbox/dark-v10',
    'mapbox://styles/mapbox/outdoors-v11',
    'mapbox://styles/mapbox/satellite-v9',
  ]
  lat = 34.75;
  lng = 10.75;
  constructor(private http: HttpClient) { }
  ngOnInit() {
    (mapboxgl as any).accessToken = environment.mapbox.accessToken;
    this.map = new mapboxgl.Map({
      container: 'map',
      style: this.style,
      zoom: 13,
      center: [this.lng, this.lat]
    });
    // Add map controls
    // this.map.addControl(new mapboxgl.NavigationControl());
    this.map.on("load", () => {
      // this.drawPath();
      this.http.get("../../assets/js/stations.json").subscribe(res => {
        let r: any = res;
        r.forEach(element => {
          // console.log(element);

          this.addMarkers(element);

        });

      })

    })

  }
  drawPath() {
    this.map.addSource('route', {
      'type': 'geojson',
      'data': {
        'type': 'Feature',
        'properties': {},
        'geometry': {
          'type': 'LineString',
          'coordinates': [[10.75995343958067, 34.74051108554403], [10.760108195479376, 34.74057070057364],
          [10.760243003967645, 34.74062691951302], [10.760358812824734, 34.740680113670194],
          [10.760456569827, 34.74073065435138], [10.760537222751026, 34.74077891286271],
          [10.76060171937604, 34.74082526050701], [10.76065100747843, 34.7408700685894],
          [10.760686034836112, 34.74091370841094], [10.760707749225617, 34.74095655127324],
          [10.760717098426, 34.74099896847733], [10.760715030213873, 34.74104133132336],
          [10.760702492366988, 34.741084011110814], [10.760680432661928, 34.74112737913708],
          [10.760649798877779, 34.74117180670014], [10.760566600178493, 34.74126532562424],
          [10.760460478490359, 34.741367538245385], [10.760339016030883, 34.74148141491102],
          [10.760209795021296, 34.74160992594608], [10.760080397680326, 34.74175604165109],
          [10.760018002329446, 34.741836629465524], [10.75995840622943, 34.74192273229595],
          [10.759902557155726, 34.74201472141968], [10.759851402885943, 34.74211296811167],
          [10.759805891199392, 34.74221784364342], [10.759766969872487, 34.74232971928333],
          [10.75973558668315, 34.74244896629614], [10.759712689407877, 34.74257595594261],
          [10.759694713778458, 34.74270351100937], [10.75967750408654, 34.74282439848503],
          [10.759661120945538, 34.742938905921164], [10.759645624967675, 34.7430473208685],
          [10.759617536957506, 34.74324702348426], [10.759593724966209, 34.74342580667697], [10.759574673904012, 34.74358597075725], [10.75956086867987, 34.74372981600277], [10.75955279420387, 34.743859642664276], [10.759550935384937, 34.74397775097104], [10.759555777131965, 34.744086441132964], [10.759567804353821, 34.74418801334397], [10.759587501962073, 34.74428476778439], [10.759615354864195, 34.74437900462327], [10.759651847970503, 34.74447302401741], [10.759697466191113, 34.74456912611444], [10.759752694433615, 34.74466961105034], [10.759818017608183, 34.744776778949074], [10.759853044965894, 34.74482813402102], [10.759887873950987, 34.74487132311904], [10.759922923349933, 34.74490694619362], [10.759958611947809, 34.74493560319209], [10.76003358188106, 34.744974418732795], [10.760116134034291, 34.744992569270536], [10.760209618689913, 34.744994854312125], [10.76031738613284, 34.74498607335282], [10.760442786644063, 34.744971025882634], [10.760589170507217, 34.74495451139434], [10.760759888007271, 34.74494132938341], [10.760855418833785, 34.74493748789956], [10.760958289426526, 34.74493627934713], [10.761068918568014, 34.74493830366313], [10.761187725047336, 34.7449441607843], [10.76131512764698, 34.74495445064598], [10.761451545153307, 34.744969773184295], [10.761597396351505, 34.744990728333065],
          [10.761753100026738, 34.74501791602374],
          [10.761919074965363, 34.745051936186826],
          [10.7620957399526, 34.74509338874972], [10.762283513773497, 34.745142873636595],
          [10.762482815213247, 34.745200990768566], [10.762694063058234, 34.745268340062026],
          [10.762917676092286, 34.74534552142829]]
        }
      }
    });
    this.map.addLayer({
      'id': 'route',
      'type': 'line',
      'source': 'route',
      'layout': {
        'line-join': 'round',
        'line-cap': 'round'
      },
      'paint': {
        'line-color': '#9db7f3',
        'line-width': 5
      }
    });
  }
  addMarkers(data) {

    var el = document.createElement('div');
    el.className = 'marker';
    el.style.backgroundImage =
      'url(https://placekitten.com/g/10/10'
      +
      '/)';
    el.style.width = '10px';
    el.style.height = '10px';

    el.addEventListener('click', function () {
      console.log(data.name);

    });
    //console.log(data);

    // add marker to map
    new mapboxgl.Marker(el)
      .setLngLat(JSON.parse(data.geoJSON))
      .addTo(this.map);

  }
}